#include <stdio.h>  
#include <stdlib.h> 
#include <string.h>  
#define MAX_STUDENTS 100  
#define NAME_LENGTH 50  
struct Student 
{
    char name[NAME_LENGTH];  
    float grade;  
};
void addStudent(struct Student students[], int *count);
void displayStudents(struct Student students[], int count);
void calculateAverage(struct Student students[], int count);
void updateGrade(struct Student students[], int count);
int main() 
{
    struct Student students[MAX_STUDENTS];  
    int studentCount = 0; 
    int choice;  
    while (1) 
    {
        printf("\nStudent Grade Management System\n");
        printf("1. Add Student\n");
        printf("2. Display Students\n");
        printf("3. Calculate Average Grade\n");
        printf("4. Update Student Grade\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice)
        {
            case 1:
                addStudent(students, &studentCount);  
                break;
            case 2:
                displayStudents(students, studentCount);  
                break;
            case 3:
                calculateAverage(students, studentCount);  
                break;
            case 4:
                updateGrade(students, studentCount);  
                break;
            case 5:
                printf("Exiting program.\n");
                exit(0);  
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }
    return 0;  
}
void addStudent(struct Student students[], int *count)
{
    if (*count >= MAX_STUDENTS) {
        printf("Student limit reached! Cannot add more students.\n");
        return;
    }
    printf("Enter student name: ");
    getchar();  
    fgets(students[*count].name, NAME_LENGTH, stdin); 
    students[*count].name[strcspn(students[*count].name, "\n")] = 0;  
    printf("Enter grade for %s: ", students[*count].name);
    scanf("%f", &students[*count].grade);  
    (*count)++;  
    printf("Student added successfully.\n");
}
void displayStudents(struct Student students[], int count)
{
    if (count == 0) 
    {
        printf("No students to display.\n");
        return;
    }
    printf("\nList of Students and Grades:\n");
    for (int i = 0; i < count; i++) {
        printf("Name: %s, Grade: %.2f\n", students[i].name, students[i].grade);
    }
}
void calculateAverage(struct Student students[], int count)
{
    if (count == 0)
    {
        printf("No students to calculate average.\n");
        return;
    }
    float total = 0;
    for (int i = 0; i < count; i++) 
    {
        total += students[i].grade;
    }
    printf("Average grade of all students: %.2f\n", total / count);
}
void updateGrade(struct Student students[], int count) 
{
    if (count == 0)
    {
        printf("No students to update.\n");
        return;
    }
    char name[NAME_LENGTH];
    printf("Enter student's name to update grade: ");
    getchar();  
    fgets(name, NAME_LENGTH, stdin);  
    name[strcspn(name, "\n")] = 0;  
    int found = 0;
    for (int i = 0; i < count; i++) 
    {
        if (strcmp(students[i].name, name) == 0)
        {  
            printf("Enter new grade for %s: ", students[i].name);
            scanf("%f", &students[i].grade);  
            printf("Grade updated successfully.\n");
            found = 1;
            break;  
        }
    }
    if (!found) 
    {
        printf("Student with name %s not found.\n", name);
    }
}
